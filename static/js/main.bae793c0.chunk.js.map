{"version":3,"sources":["components/login/login.js","shared/grid/grid.js","components/countries/countries.js","components/cities/cities.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","login","state","controles","email","password","inputChangeHandler","event","controlName","updatedControles","target","value","setState","axios","post","headers","then","res","localStorage","setItem","data","token","props","history","push","catch","error","alert","className","htmlFor","type","id","placeholder","onChange","e","onClick","this","Component","grid","indexTemplate","args","rowIndex","elementAttr","dataSource","showBorders","showColumnLines","showRowLines","allowColumnReordering","allowColumnResizing","columnResizingMode","rowAlternationEnabled","loadPanel","enabled","showIndicator","showPane","rowDragging","showDragIcons","onRowClicked","onRowInserted","onEdit","onDelete","fixed","dataField","cellRender","width","allowEditing","visible","mode","autoExpandAll","columnRenderingMode","allowUpdating","allowDeleting","allowAdding","defaultPageSize","showPageSizeSelector","allowedPageSizes","showInfo","TOKEN","getItem","countries","componentDidMount","getAllCountries","get","name","put","delete","to","cities","getAllCitiesForSelectedCountry","countryId","match","params","parseInt","console","log","App","exact","path","component","Login","Countries","Cities","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.bae793c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"https://taskapi2021.azurewebsites.net/api/\"\r\nclass login extends Component {\r\n\r\n    state = {\r\n        controles: {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    inputChangeHandler = (event, controlName) => {\r\n        const updatedControles = {\r\n            ...this.state.controles,\r\n            [controlName]: event.target.value\r\n        }\r\n\r\n        this.setState({\r\n            controles: updatedControles\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n\r\n        let email = this.state.controles.email;\r\n        let password = this.state.controles.password;\r\n\r\n        axios.post(BASE_URL+'user/login', {\r\n            \"Email\": email,\r\n            \"Password\": password\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        })\r\n            .then(res => {\r\n\r\n                localStorage.setItem('TOKEN', `Bearer ${res.data.token}`);\r\n                this.props.history.push('countries');\r\n\r\n            }).catch( error =>  alert(\"Email or password is not correct. If you don't have an account please sign up\") )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-box\">\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"staticEmail\" className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\" className=\"form-control\" id=\"staticEmail\" placeholder=\"email@example.com\"\r\n                            onChange={(e) => this.inputChangeHandler(e, \"email\")} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\" className=\"form-control\" id=\"inputPassword\" placeholder=\"Password\"\r\n                            onChange={(e) => this.inputChangeHandler(e, \"password\")} />\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"btn btn-success\" onClick={this.login}>Login</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default login;","import React, { Component } from 'react';\r\n\r\nimport DataGrid,\r\n{\r\n    Column, Editing, Paging, Pager, Grouping,SearchPanel,\r\n    Selection, ColumnFixing, Scrolling\r\n}\r\n    from 'devextreme-react/data-grid';\r\n\r\nclass grid extends Component {\r\n\r\n    indexTemplate = (args) => {\r\n        return <div id=\"indicator\">{args.rowIndex + 1}</div>\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <DataGrid\r\n                elementAttr={{ id: 'gridContainer' }}\r\n                dataSource={this.props.data}\r\n                showBorders={false}\r\n                showColumnLines={false}\r\n                showRowLines={false}\r\n                allowColumnReordering={true}\r\n                allowColumnResizing={true}\r\n                columnResizingMode='widget'\r\n                rowAlternationEnabled={true}\r\n                loadPanel={{ enabled: true, showIndicator: true, showPane: true }}\r\n                rowDragging={{ allowColumnReordering: true, showDragIcons: true }}\r\n                showRowLines={true}\r\n\r\n                onRowClick={(args) => this.props.onRowClicked(args)}\r\n                onRowInserted={(args) => this.props.onRowInserted(args)}\r\n                onRowUpdated={(args) => this.props.onEdit(args)}\r\n                onRowRemoved={(args) => this.props.onDelete(args)}\r\n            >\r\n                  <Column\r\n                        fixed={true}\r\n                        dataField={\"\"}\r\n                        cellRender={this.indexTemplate}\r\n                        width={60}\r\n                        allowEditing={false}\r\n                    />\r\n                 <Column\r\n                        fixed={true}\r\n                        dataField={\"id\"}\r\n                        allowEditing={false}\r\n                    \r\n                    />\r\n                     <Column\r\n                        fixed={true}\r\n                        dataField={\"name\"}\r\n                    />\r\n                <SearchPanel visible={true}\r\n                    width={240}\r\n                    placeholder=\"Search...\" />\r\n                <ColumnFixing enabled={true} />\r\n                <Selection mode=\"single\" />\r\n                <Grouping autoExpandAll={true} />\r\n                <Scrolling columnRenderingMode=\"virtual\" />\r\n                <Editing\r\n                    mode=\"row\"\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true} />\r\n\r\n                <Scrolling columnRenderingMode=\"virtual\" />\r\n                <Paging defaultPageSize={10} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={[5, 10, 20, 100]}\r\n                showInfo={true} />\r\n        </DataGrid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default grid;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '../../shared/grid/grid';\r\nimport axios from 'axios';\r\n\r\nconst TOKEN = localStorage.getItem('TOKEN');\r\nconst BASE_URL = \"https://taskapi2021.azurewebsites.net/api/\"\r\n\r\n\r\nclass countries extends Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      \r\n        this.getAllCountries();\r\n    }\r\n\r\n    getAllCountries = () => {\r\n        axios.get(BASE_URL + 'country', {\r\n            headers: {\r\n                'authorization': localStorage.getItem('TOKEN')\r\n            }\r\n        })\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n\r\n            })\r\n            .catch(error => this.props.history.push(\"/\"))\r\n    }\r\n\r\n    onRowClicked = (args) => {\r\n\r\n        this.props.history.push(`countries/${args.data.id}`);\r\n    }\r\n\r\n    onRowInserted = (args) => {\r\n        axios.post(BASE_URL + 'country', { \"Name\": args.data.name }, {\r\n            headers: {\r\n                'authorization': TOKEN\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.getAllCountries();\r\n            })\r\n\r\n    }\r\n\r\n    onEdit = (args) => {\r\n        axios.put(BASE_URL+'country', args.data, {\r\n            headers: {\r\n                'authorization': TOKEN\r\n            }\r\n        })\r\n    }\r\n\r\n    onDelete = (args) => {\r\n        axios.delete(BASE_URL+'country/' + args.data.id, {\r\n            headers: {\r\n                'authorization': TOKEN\r\n            }\r\n        })\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"text-center head\">\r\n                    <h3 className=\"title\">Coutries</h3>\r\n                    <Link to=\"/\" className=\"logout\">Logout</Link>\r\n                </div>\r\n\r\n                <Grid\r\n                    data={this.state.data}\r\n                    onEdit={this.onEdit}\r\n                    onDelete={this.onDelete}\r\n                    onRowInserted={this.onRowInserted}\r\n                    onRowClicked={this.onRowClicked}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default countries;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '../../shared/grid/grid';\r\nimport axios from 'axios';\r\n\r\nconst TOKEN = localStorage.getItem('TOKEN');\r\nconst BASE_URL = \"https://taskapi2021.azurewebsites.net/api/\";\r\n\r\n\r\nclass cities extends Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n\r\n        this.getAllCitiesForSelectedCountry();\r\n    }\r\n\r\n    getAllCitiesForSelectedCountry = () => {\r\n\r\n        var countryId = this.props.match.params.id;\r\n        axios.get(BASE_URL + 'city/getcities/' + countryId, {\r\n            headers: {\r\n                'authorization': localStorage.getItem('TOKEN')\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data\r\n                })\r\n            })\r\n            .catch(error => this.props.history.push(\"/\"))\r\n    }\r\n\r\n    onRowInserted = (args) => {\r\n\r\n        var countryId = this.props.match.params.id;\r\n\r\n        axios.post(BASE_URL + 'city',  {\"Name\":args.data.name,\"CountryId\":parseInt(countryId)}, {\r\n            headers: {\r\n                'authorization': TOKEN\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.getAllCitiesForSelectedCountry();\r\n            })\r\n\r\n    }\r\n\r\n    onDelete = (args) => {\r\n        axios.delete(BASE_URL + 'city/' + args.data.id, {\r\n            headers: {\r\n                'authorization': TOKEN\r\n            }\r\n        })\r\n    }\r\n\r\n    onEdit = (args) => {\r\n        axios.put(BASE_URL+'city',  {\"Id\":args.data.id,\"Name\":args.data.name,\"CountryId\":args.data.countryId}, {\r\n            headers: {\r\n                'authorization': TOKEN\r\n            }\r\n        })\r\n    }\r\n    \r\n    onRowClicked = (args) => {\r\n          console.log(args)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className=\"text-center head\">\r\n\r\n                        <Link to=\"/countries\" className=\"back\">Back to Countries</Link>\r\n                        <h3 className=\"title\">Cities</h3>\r\n                        <Link to=\"/\" className=\"logout\">Logout</Link>\r\n                    </div>\r\n\r\n                    <Grid \r\n                        data={this.state.data}\r\n                        onEdit={this.onEdit}\r\n                        onDelete={this.onDelete}\r\n                        onRowInserted={this.onRowInserted}\r\n                        onRowClicked={this.onRowClicked}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default cities;","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Login from './components/login/login';\nimport Countries from './components/countries/countries';\nimport Cities from './components/cities/cities'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n     <Switch>\n       <Route exact path=\"/\" component={Login}/>\n       <Route exact path=\"/countries\" component={Countries}/>\n       <Route exact path=\"/countries/:id\" component={Cities}/>\n     </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.material.blue.light.css';\nimport './shared/style/style.css';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.Fragment>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}